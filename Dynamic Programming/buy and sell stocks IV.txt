int Solution::solve(vector<int> &a, int b){
    int n = a.size();
    //case 1
    if(b==0 || n<=1)
        return 0;
        
    //case2
    int profit = 0;
    if(2*b>n ){
        for(int i=0; i<a.size()-1; i++)
            if(a[i+1]>a[i])
                profit = profit+a[i+1] - a[i];
        return profit;
    }
    
    //case 3
    int dp[2*b+1];
    dp[0]= 0-a[0];
    
    for(int i=1; i<2*b; i++){
        if(i%2==0)
            dp[i]=INT_MIN;
        else dp[i]=0;
    }
    
    for(int i=0; i<n;i++){
        for(int j=0; j<=2*b; j++){
            if(j==0)
                dp[j]= max(dp[j]/*int_min*/, 0-a[i]);
            else if(j%2==0) //buy
                dp[j]= max(dp[j], dp[j-1]-a[i]);
            else            //sell
                dp[j]= max(dp[j], dp[j-1]+a[i]);
        }
    }
    return dp[2*b-1]; //last element in b array (last sell state)
}
