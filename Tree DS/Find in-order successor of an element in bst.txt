/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
struct TreeNode* find(TreeNode* root, int data){
    if(root == NULL) return NULL;
    
    else if(root->val==data) return root;
    else if(root->val<data) return find(root->right, data);
    else return find(root->left, data);
}
struct TreeNode* findmin(struct TreeNode* root){
    if(root==NULL) return NULL;
    
    while(root->left !=NULL) root = root->left;
    return root;
}

TreeNode* Solution::getSuccessor(TreeNode* root, int b) {
   struct TreeNode* current = find(root, b);
    if(current ==  NULL)
        return NULL;
        
    if(current->right!=NULL)
        return findmin(current->right);
    
    else {
        struct TreeNode* successor = NULL;
        struct TreeNode* ancestor = root;
        
        while(ancestor != current){
            if(current->val < ancestor->val){
                successor = ancestor;
                ancestor = ancestor->left;
            }
            else ancestor = ancestor->right;
        }
        return successor;
    }
}
